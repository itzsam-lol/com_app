generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  firebaseUid    String   @unique
  email          String   @unique
  displayName    String?
  phone          String?
  age            Int?
  gender         String?
  address        String?
  emergencyContact String?
  plan           Plan     @default(STARTER)
  loyaltyPoints  Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  planExpiry     DateTime?
  lastPaymentId  String?

  medicalProfile MedicalProfile?
  sosEvents      SosEvent[]
  payments       Payment[]
  loyaltyEvents  LoyaltyEvent[]
}

model MedicalProfile {
  id         String   @id @default(uuid())
  userId     String   @unique
  allergies  String[]
  conditions String[]
  medications String[]
  history    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user       User     @relation(fields: [userId], references: [id])
}

model SosEvent {
  id        String   @id @default(uuid())
  userId    String
  type      String
  location  String?
  timestamp DateTime @default(now())
  status    String   @default("active")

  user      User     @relation(fields: [userId], references: [id])
}

model Payment {
  id         String   @id @default(uuid())
  userId     String
  plan       Plan
  amount     Int
  currency   String
  status     String
  periodStart DateTime
  periodEnd   DateTime
  createdAt   DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

model LoyaltyEvent {
  id        String   @id @default(uuid())
  userId    String
  eventType String
  points    Int
  description String?
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

enum Plan {
  STARTER
  PREMIUM
  ENTERPRISE
}